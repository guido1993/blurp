//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LensBlurApp.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class AppResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AppResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("LensBlurApp.Resources.AppResources", typeof(AppResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lens Blur is a developer example application on how to use Nokia Imaging SDK interactive foreground segmenter and the lens blur effect to blur only selected areas of images..
        /// </summary>
        public static string AboutPage_AboutText {
            get {
                return ResourceManager.GetString("AboutPage_AboutText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This Nokia developer example application has been created to provide tips and best practice guidance for software developers and app designers, and may not have all the features you would expect in a commercial product. This application is published in Store as a free software as it may also have value to regular Nokia phone users. The source code and documentation of this example can be downloaded from Nokia Developer website..
        /// </summary>
        public static string AboutPage_DisclaimerText {
            get {
                return ResourceManager.GetString("AboutPage_DisclaimerText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nokia Developer website.
        /// </summary>
        public static string AboutPage_Hyperlink_Project_Text {
            get {
                return ResourceManager.GetString("AboutPage_Hyperlink_Project_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to http://developer.nokia.com.
        /// </summary>
        public static string AboutPage_Hyperlink_Project_Url {
            get {
                return ResourceManager.GetString("AboutPage_Hyperlink_Project_Url", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.
        /// </summary>
        public static string AboutPage_ProjectRun_Text {
            get {
                return ResourceManager.GetString("AboutPage_ProjectRun_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to about.
        /// </summary>
        public static string AboutPage_Title {
            get {
                return ResourceManager.GetString("AboutPage_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lens Blur version {0}.
        /// </summary>
        public static string AboutPage_VersionText {
            get {
                return ResourceManager.GetString("AboutPage_VersionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to about.
        /// </summary>
        public static string Application_AboutMenuItem {
            get {
                return ResourceManager.GetString("Application_AboutMenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to help.
        /// </summary>
        public static string Application_HelpMenuItem {
            get {
                return ResourceManager.GetString("Application_HelpMenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LENS BLUR.
        /// </summary>
        public static string Application_Title {
            get {
                return ResourceManager.GetString("Application_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to circle.
        /// </summary>
        public static string EffectPage_CircleLabel {
            get {
                return ResourceManager.GetString("EffectPage_CircleLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to flower.
        /// </summary>
        public static string EffectPage_FlowerLabel {
            get {
                return ResourceManager.GetString("EffectPage_FlowerLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to heart.
        /// </summary>
        public static string EffectPage_HeartLabel {
            get {
                return ResourceManager.GetString("EffectPage_HeartLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to hexagon.
        /// </summary>
        public static string EffectPage_HexagonLabel {
            get {
                return ResourceManager.GetString("EffectPage_HexagonLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to max.
        /// </summary>
        public static string EffectPage_MaximumLabel {
            get {
                return ResourceManager.GetString("EffectPage_MaximumLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to min.
        /// </summary>
        public static string EffectPage_MinimumLabel {
            get {
                return ResourceManager.GetString("EffectPage_MinimumLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to save.
        /// </summary>
        public static string EffectPage_SaveButton {
            get {
                return ResourceManager.GetString("EffectPage_SaveButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to size.
        /// </summary>
        public static string EffectPage_SizeLabel {
            get {
                return ResourceManager.GetString("EffectPage_SizeLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to star.
        /// </summary>
        public static string EffectPage_StarLabel {
            get {
                return ResourceManager.GetString("EffectPage_StarLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to pick blur shape.
        /// </summary>
        public static string EffectPage_Title {
            get {
                return ResourceManager.GetString("EffectPage_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When you&apos;re ready with marking the areas, click on the accept button to navigate to the blur shape selection. In this second step, try out different lens blur effect kernel shapes and sizes by tapping on the shape selection icons and by adjusting the size slider. The preview is again automatically updated to reflect your shape and size selections..
        /// </summary>
        public static string HelpPage_EffectGuideText {
            get {
                return ResourceManager.GetString("HelpPage_EffectGuideText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This application allows you to create bokeh style lens blur effect on images. This means that you can keep certain areas of an image sharp (in focus) while applying a blur effect on rest of the image (out of focus). To get started with this, you must first open an image from the Photos gallery by tapping on the open icon in the application bar in this application..
        /// </summary>
        public static string HelpPage_OpenGuideText {
            get {
                return ResourceManager.GetString("HelpPage_OpenGuideText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When you&apos;re happy with the result, you can save it to the Saved Photos album in the Photos gallery..
        /// </summary>
        public static string HelpPage_SaveGuideText {
            get {
                return ResourceManager.GetString("HelpPage_SaveGuideText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to First step is to mark the image foreground and background areas by drawing annotations on the image using two different colors. Notice that it is not necessary to paint the whole areas, but only to give hints to the interactive foreground segmenter. Based on your annotations, the preview is automatically updated to show the generated foreground/background segmentation..
        /// </summary>
        public static string HelpPage_SegmenterGuideText {
            get {
                return ResourceManager.GetString("HelpPage_SegmenterGuideText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to help.
        /// </summary>
        public static string HelpPage_Title {
            get {
                return ResourceManager.GetString("HelpPage_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LeftToRight.
        /// </summary>
        public static string ResourceFlowDirection {
            get {
                return ResourceManager.GetString("ResourceFlowDirection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to en-US.
        /// </summary>
        public static string ResourceLanguage {
            get {
                return ResourceManager.GetString("ResourceLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to accept.
        /// </summary>
        public static string SegmenterPage_AcceptButton {
            get {
                return ResourceManager.GetString("SegmenterPage_AcceptButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to background.
        /// </summary>
        public static string SegmenterPage_BackgroundButton {
            get {
                return ResourceManager.GetString("SegmenterPage_BackgroundButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to foreground.
        /// </summary>
        public static string SegmenterPage_ForegroundButton {
            get {
                return ResourceManager.GetString("SegmenterPage_ForegroundButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To begin, open an image from the Photos gallery by tapping on the open icon in the application bar.
        ///
        ///For detailed guide on how to use this application, select &quot;help&quot; from the application menu..
        /// </summary>
        public static string SegmenterPage_GuideText {
            get {
                return ResourceManager.GetString("SegmenterPage_GuideText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to open.
        /// </summary>
        public static string SegmenterPage_OpenButton {
            get {
                return ResourceManager.GetString("SegmenterPage_OpenButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to reset.
        /// </summary>
        public static string SegmenterPage_ResetButton {
            get {
                return ResourceManager.GetString("SegmenterPage_ResetButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to mark areas.
        /// </summary>
        public static string SegmenterPage_Title {
            get {
                return ResourceManager.GetString("SegmenterPage_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to undo.
        /// </summary>
        public static string SegmenterPage_UndoButton {
            get {
                return ResourceManager.GetString("SegmenterPage_UndoButton", resourceCulture);
            }
        }
    }
}
